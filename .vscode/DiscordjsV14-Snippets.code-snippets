{
	// Place your Galav14Update workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"Discord.js > Slash Commands [DJS V14]": {
		"prefix": "!djs:Slash",
		"body": [
			"//=====================================| Import the Module |=====================================\\\\\\",
			"const { SlashCommandBuilder, ChatInputCommandInteraction, PermissionFlagsBits, Client, EmbedBuilder } = require(\"discord.js\");",
			"",
			"//==========< SETTINGS >==========\\\\\\",
			"const Config = require(\"../../../Structures/Settings/config.json\");",
			"const Emoji = require(\"../../../Structures/Settings/emojis.json\");",
			"const Embed = require(\"../../../Structures/Settings/embed.json\");",
			"",
			"//==========< FUNCTIONS >==========\\\\\\",
			"const { errorCmdLogsInt } = require(\"../../../Structures/Functions/errorCmdLogs.js\");",
			"",
			"//==========< OTHERS >==========\\\\\\",
			"",
			"//=====================================| Code |=====================================\\\\\\",
			"",
			"module.exports = {",
			"    category: \"\",",
			"    cooldown: 15,",
			"    devOnly: false,",
			"    guildOnly: false,",
			"    voiceOnly: false,",
			"    nsfwOnly: false,",
			"    toggleOffCmd: false,",
			"    maintenanceCmd: false,",
			"",
			"    data: new SlashCommandBuilder()",
			"        .setName(\"\")",
			"        .setDescription(\"\")",
			"        .setDefaultMemberPermissions(PermissionFlagsBits.UseApplicationCommands)",
			"        .setDMPermission(false),",
			"",
			"    /**",
			"     * @param {ChatInputCommandInteraction} interaction",
			"     * @param {Client} client",
			"     */",
			"",
			"    async execute(client, interaction) {",
			"        try {",
			"",
			"        } catch (error) {",
			"            errorCmdLogsInt(client, interaction, error);",
			"        };",
			"    }",
			"};"
		],
		"description": "Create a new module Slash Commands Discord.js v14 MGalaCyber Handlers"
	},
	"Discord.js > Context Commands [DJS V14]": {
		"prefix": "!djs:Context",
		"body": [
			"//=====================================| Import the Module |=====================================\\\\\\",
			"const { ContextMenuCommandBuilder, ContextMenuCommandInteraction, ApplicationCommandType, PermissionFlagsBits, Client, EmbedBuilder } = require(\"discord.js\");",
			"",
			"//==========< SETTINGS >==========\\\\\\",
			"const Config = require(\"../../../Structures/Settings/config.json\");",
			"const Emoji = require(\"../../../Structures/Settings/emojis.json\");",
			"const Embed = require(\"../../../Structures/Settings/embed.json\");",
			"",
			"//==========< FUNCTIONS >==========\\\\\\",
			"const { errorCmdLogsContext } = require(\"../../../Structures/Functions/errorCmdLogs.js\");",
			"",
			"//==========< OTHERS >==========\\\\\\",
			"",
			"//=====================================| Code |=====================================\\\\\\",
			"",
			"module.exports = {",
			"    category: \"\",",
			"    cooldown: 15,",
			"    devOnly: false,",
			"    guildOnly: false,",
			"    voiceOnly: false,",
			"    nsfwOnly: false,",
			"    toggleOffCmd: false,",
			"    maintenanceCmd: false,",
			"",
			"    data: new ContextMenuCommandBuilder()",
			"        .setName(\"\")",
			"        .setType(ApplicationCommandType.Message)",
			"        .setDefaultMemberPermissions(PermissionFlagsBits.UseApplicationCommands)",
			"        .setDMPermission(false),",
			"",
			"    /**",
			"     * @param {ContextMenuCommandInteraction} interaction",
			"     * @param {Client} client",
			"     */",
			"",
			"    async execute(client, interaction) {",
			"        try {",
			"",
			"        } catch (error) {",
			"            errorCmdLogsContext(client, interaction, error);",
			"        };",
			"    }",
			"};"
		],
		"description": "Create a new module Context Commands Discord.js v14 MGalaCyber Handlers"
	},
	"Discord.js > Button Commands [DJS V14]": {
		"prefix": "!djs:Buttons",
		"body": [
			"//=====================================| Import the Module |=====================================\\\\\\",
			"const { ChatInputCommandInteraction, Client, EmbedBuilder } = require(\"discord.js\");",
			"",
			"//==========< SETTINGS >==========\\\\\\",
			"const Config = require(\"../../../Structures/Settings/config.json\");",
			"const Emoji = require(\"../../../Structures/Settings/emojis.json\");",
			"const Embed = require(\"../../../Structures/Settings/embed.json\");",
			"",
			"//==========< FUNCTIONS >==========\\\\\\",
			"const { errorCmdLogsButton } = require(\"../../../Structures/Functions/errorCmdLogs.js\");",
			"",
			"//==========< OTHERS >==========\\\\\\",
			"",
			"//=====================================| Code |=====================================\\\\\\",
			"",
			"module.exports = {",
			"    name: \"\",",
			"    category: \"\",",
			"    authorOnly: false,",
			"",
			"    /**",
			"     * @param {ChatInputCommandInteraction} interaction",
			"     * @param {Client} client",
			"     */",
			"",
			"    async execute(client, interaction) {",
			"        try {",
			"",
			"        } catch (error) {",
			"            errorCmdLogsButton(client, interaction, error);",
			"            return interaction.reply({",
			"                ephemeral: true,",
			"                embeds: [",
			"                    new EmbedBuilder()",
			"                        .setColor(Embed.Colors.WrongColor)",
			"                        .setTitle(`${Emoji.Message.ERROR} Failed To Execute The Button!`)",
			"                        .setDescription(\"I can't execute the code. Please try again later.\")",
			"                ]",
			"            });",
			"        };",
			"    }",
			"};"
		],
		"description": "Create a new module Button Commands Discord.js v14 MGalaCyber Handlers"
	},
	"Discord.js > Modal Forms [DJS V14]": {
		"prefix": "!djs:Modals",
		"body": [
			"//=====================================| Import the Module |=====================================\\\\\\",
			"const { ChatInputCommandInteraction, Client, EmbedBuilder } = require(\"discord.js\");",
			"",
			"//==========< SETTINGS >==========\\\\\\",
			"const Config = require(\"../../../Structures/Settings/config.json\");",
			"const Emoji = require(\"../../../Structures/Settings/emojis.json\");",
			"const Embed = require(\"../../../Structures/Settings/embed.json\");",
			"",
			"//==========< FUNCTIONS >==========\\\\\\",
			"const { errorCmdLogsModal } = require(\"../../../Structures/Functions/errorCmdLogs.js\");",
			"",
			"//==========< OTHERS >==========\\\\\\",
			"",
			"//=====================================| Code |=====================================\\\\\\",
			"",
			"module.exports = {",
			"    name: \"\",",
			"    category: \"\",",
			"",
			"    /**",
			"     * @param {ChatInputCommandInteraction} interaction",
			"     * @param {Client} client",
			"     */",
			"",
			"    async execute(client, interaction) {",
			"        try {",
			"",
			"        } catch (error) {",
			"            errorCmdLogsModal(client, interaction, error);",
			"            return interaction.reply({",
			"                ephemeral: true,",
			"                embeds: [",
			"                    new EmbedBuilder()",
			"                        .setColor(Embed.Colors.WrongColor)",
			"                        .setTitle(`${Emoji.Message.ERROR} Failed To Execute The Modal!`)",
			"                        .setDescription(\"I can't execute the code. Please try again later.\")",
			"                ]",
			"            });",
			"        };",
			"    }",
			"};"
		],
		"description": "Create a new module Modal Commands Discord.js v14 MGalaCyber Handlers"
	},
	"Discord.js > Select Menus [DJS V14]": {
		"prefix": "!djs:Selects",
		"body": [
			"//=====================================| Import the Module |=====================================\\\\\\",
			"const { ChatInputCommandInteraction, Client, EmbedBuilder } = require(\"discord.js\");",
			"",
			"//==========< SETTINGS >==========\\\\\\",
			"const Config = require(\"../../../Structures/Settings/config.json\");",
			"const Emoji = require(\"../../../Structures/Settings/emojis.json\");",
			"const Embed = require(\"../../../Structures/Settings/embed.json\");",
			"",
			"//==========< FUNCTIONS >==========\\\\\\",
			"const { errorCmdLogsSelect } = require(\"../../../Structures/Functions/errorCmdLogs.js\");",
			"",
			"//==========< OTHERS >==========\\\\\\",
			"",
			"//=====================================| Code |=====================================\\\\\\",
			"",
			"module.exports = {",
			"    name: \"\",",
			"    category: \"\",",
			"    authorOnly: false,",
			"",
			"    /**",
			"     * @param {ChatInputCommandInteraction} interaction",
			"     * @param {Client} client",
			"     */",
			"",
			"    async execute(client, interaction) {",
			"        try {",
			"",
			"        } catch (error) {",
			"            errorCmdLogsSelect(client, interaction, error);",
			"            return interaction.reply({",
			"                ephemeral: true,",
			"                embeds: [",
			"                    new EmbedBuilder()",
			"                        .setColor(Embed.Colors.WrongColor)",
			"                        .setTitle(`${Emoji.Message.ERROR} Failed To Execute The Selection!`)",
			"                        .setDescription(\"I can't execute the code. Please try again later.\")",
			"                ]",
			"            });",
			"        };",
			"    }",
			"};"
		],
		"description": "Create a new module Select Menus Discord.js v14 MGalaCyber Handlers"
	},
	"Discord.js > Events Handler [DJS V14]": {
		"prefix": "!djs:Event",
		"body": [
			"//=====================================| Import the Module |=====================================\\\\\\",
			"const { ChatInputCommandInteraction, Client, EmbedBuilder } = require(\"discord.js\");",
			"",
			"//==========< SETTINGS >==========\\\\\\",
			"const Webhook = require(\"../../Structures/Settings/webhook.json\");",
			"const Config = require(\"../../Structures/Settings/config.json\");",
			"const Emoji = require(\"../../Structures/Settings/emojis.json\");",
			"const Embed = require(\"../../Structures/Settings/embed.json\");",
			"",
			"//==========< FUNCTIONS >==========\\\\\\",
			"const { errorCmdLogsInt } = require(\"../../Structures/Functions/errorCmdLogs.js\");",
			"",
			"//==========< OTHERS >==========\\\\\\",
			"const color = require(\"colors\");",
			"",
			"//=====================================| Code |=====================================\\\\\\",
			"",
			"module.exports = {",
			"    name: \"\",",
			"    once: true,",
			"",
			"    /**",
			"     * @param {ChatInputCommandInteraction} interaction",
			"     * @param {Client} client",
			"     */",
			"",
			"    async execute(client) {",
			"",
			"    }",
			"};"
		],
		"description": "Create a new module Events Commands Discord.js v14 MGalaCyber Handlers"
	},
}